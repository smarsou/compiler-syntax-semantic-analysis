let
    type couple = {a : int, b : int}
    type couple = {a : string, b :string}
    type reference = uplet
    type reference = int
    type tableauInt = array of int
    type tableauCpl = array of couple

    var premier : string := 10
    var premier : string := "salut" 
    var premier := "aurevoir"
    var deuxieme : uplet := 15

    var couple1 := couple {a = "goerge", b = "zizou"}
    var couple1 := uplet {un = "o", deux="oo", trois="ooo"}
    var couple1 := tableauInt {j="j"}
    var couple1 := couple {a = 0}
    var couple1 := couple {a = 0, c = 0}
    var couple1 := couple {a = 0, b = 0}
    var couple2 : couple := couple1

    var tab := couple [3] of 0
    var tab := tableauCpl["cinq"] of 0
    var tab := tableauCpl[3] of 0
    var tab := tableauCpl[3] of couple1
    var tab2 := tableauInt[5] of -1
    var tab3 : tableauCpl := tableauInt[5] of -1

	var a:= 10
	var n:= "mady"
    var add := 1
    var k := 6

    function add(a : int,p:string,b:int) : int = 1
    function pop() : int = 4
    function set(a:int) = "papa"
    function take():int = "no"
in	
	if a=10 then a:=a+1;
	if a=10 then print("PCL");
	if a=10 then n:= "mady waguÃ©";
	if a>5 then a:=a+1 else n:="mady waguÃ©";
	if a=20 then print("PCL complete") else ("PCL failed");
	for i:=0 to "str" do (a := a+10);
	for i:="str" to "str" do (a := a+10);
	for i:=0 to 10 do (a);
	
	for i:=0 to 100 do (a := a+10);
	
	for j:=0 to 100 do (
		a := a+10;
		while 10>0 do (n; break)
	);
	while "sa" do (a:=a+1);
	while n do (a);
	while n do (a:=a+1);
	let var x:= 0 in break end;

    add("MAIN",2);
    set("ok");
    pop();
    remove("a");
    add := add - k;
    add > "main";
    add / 0;
    "main" | "ol";
    -"ok";
    add + "pl";
    add * "no";
    add >= "papa";
    add <= "mam";
    "tata"<>51;
    "papa" < add;

    c;
    b[0];
    couple1.c;
    tab["String"];
    tab[0].d;
    b.c[0];
    premier := 10;
    couple2 := couple1
	
end
